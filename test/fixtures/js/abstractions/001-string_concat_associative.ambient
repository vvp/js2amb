string_concat[
  rec X.in_ call.open call.(
    string_concat[out string_concat.X]|
    out_ string_concat.open return.open_|
    func[
		left[in_ arg.open arg.in string.in concat]|
		right[in_ arg.open arg.in string.in concat]|
		string[
			concat[in_ left|in_ right]|
			in_ left|in_ right
		]|
		open_
	]
  )
]|
program[
  in_ call.open call.(
    out_ call.in_ string_concat|
    out_ call.in_ string_concat|
    call[
      out program.in string_concat.open_.return[open_.in program.in func]
    ]|
    call[
      out program.in string_concat.open_.return[open_.in program.in func]
    ]|
    func[
      in_ string_concat.open string_concat.(
        arg[string[hello[]]|in left.open_]|
        arg[string[world[]]|in right.open_]|
        open func.in func.in arg.open_
      )
    ]|
    func[
      in_ func.(
        arg[in_ func.open func.in left.open_]|
        arg[string[again[]]|in right.open_]|
        in_ string_concat.open string_concat.open func.open_
      )
    ]|
    open func.open return.open_
  )
]|
call[in program.open_.return[open_.in func]]|
func[in_ program.open program.open_]|
open func
